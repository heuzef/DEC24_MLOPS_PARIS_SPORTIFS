#################
# PARIVISION 2025
# Politique de redémarrage des services : 
# "unless-stopped" signifie que le conteneur redémarrera automatiquement sauf si arrêté manuellement.
#################
version: '3.7' # Version Docker Compose utilisée. Il est recommandé d'utiliser une version récente pour bénéficier des dernières fonctionnalités.
services: # Définit les différents services isolée.
  portainer: # Portainer est une interface utilisateur graphique pour gérer vos environnements Docker.
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Monte le socket Docker de l'hôte dans le conteneur. Cela permet à Portainer de gérer Docker (mode DooD).
      - portainer_data:/data/
    networks:
      - parivision_net

  mongodb: # Base de données NoSQL MongoDB. Stock les données du projet.
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME} # Nom d'utilisateur administrateur pour MongoDB.
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD} # Mot de passe administrateur pour MongoDB.
    networks:
      - parivision_net
    depends_on: # Définit une dépendance. Ce service ne démarrera qu'après le démarrage de Portainer.
      - portainer

  virtualbetsapi: # API VirtualBetsAPI, source de données du projet.
    image: virtualbetsapi_image
    container_name: virtualbetsapi
    restart: unless-stopped
    build: # Indique à Docker Compose de construire l'image à partir d'un Dockerfile.
      context: . # Le contexte de construction est le répertoire courant.
      dockerfile: virtualbetsapi/Dockerfile_virtualbetsapi # Chemin vers le Dockerfile.
    ports:
      - "8800:8800"
    networks:
      - parivision_net
    depends_on: # Définit une dépendance. Ce service ne démarrera qu'après le démarrage de MongoDB.
      - mongodb

  mlflow: # MLflow est une plateforme open-source pour gérer le cycle de vie du machine learning.
    image: ghcr.io/mlflow/mlflow:latest # Utilise l'image officielle de MLflow depuis GitHub Container Registry.
    container_name: mlflow
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlruns
      - mlflow_artifacts:/mlartifacts
    environment:
      MLFLOW_FLASK_SERVER_SECRET_KEY: ${MLFLOW_FLASK_SERVER_SECRET_KEY} # Clé secrète pour le serveur Flask de MLflow (sécurité).
      MLFLOW_TRACKING_USERNAME: ${MLFLOW_TRACKING_USERNAME} # Nom d'utilisateur pour l'authentification MLflow.
      MLFLOW_TRACKING_PASSWORD: ${MLFLOW_TRACKING_PASSWORD} # Mot de passe pour l'authentification MLflow.
    networks:
      - parivision_net
    depends_on: # Définit une dépendance. Ce service ne démarrera qu'après le démarrage de MongoDB.
      - mongodb
    # Commandes exécutées au démarrage du conteneur :
    # Installation de la dépendance python mlflow[auth] pour l'authentification,
    # Démarre le serveur MLflow,
    # Spécifie le chemin des expériences,
    # Autorise l'exposition sans filtrage IP sur le port par défaut.
    command: sh -c "pip install mlflow[auth] && mlflow server --backend-store-uri /mlruns --host 0.0.0.0 --port 5000 --app-name basic-auth"

  streamlit: # App Streamlit du projet.
    image: streamlit_image
    container_name: streamlit
    restart: unless-stopped
    build: # Indique à Docker Compose de construire l'image à partir d'un Dockerfile.
      context: . # Le contexte de construction est le répertoire courant.
      dockerfile: app/Dockerfile_streamlit # Chemin vers le Dockerfile.
    ports:
      - "8501:8501"
    networks:
      - parivision_net
    depends_on: # Définit une dépendance. Ce service ne démarrera qu'après le démarrage de Portainer.
      - portainer

  homer: # Portail d'accueil du projet.
    image: b4bz/homer
    container_name: homer
    restart: unless-stopped
    ports:
      - 8081:8080
    volumes:
      - ./homer:/www/assets
    user: 1000:1000
    environment:
      - INIT_ASSETS=0 # Install example configuration file & assets (favicons, ...) to help you get started.
    networks:
      - parivision_net
    depends_on: # Définit une dépendance. Ce service ne démarrera qu'après le démarrage de Portainer.
      - portainer

  # parivision: # Service API de PariVision.
  #   image: parivision:latest # Cette image est générée via BentoML
  #   container_name: parivision
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000" # Port de FastAPI
  #   networks:
  #     - parivision_net
  #   depends_on: # Définit une dépendance. Ce service ne démarrera qu'après le démarrage de MLFlow.
  #     - mlflow

volumes:
  portainer_data: # # Stocke les données de Portainer.
  mongodb_data: # Stocke les données du projet.
  mongodb_config: # Stocke la configuration de la base de données.
  mlflow_data: # Stocke les "runs" MLflow.
  mlflow_artifacts: # Stocke les "artefacts" (modèles, métriques, etc ...).
  homer_config: # Contient la configuration de Homer

networks: # Réseau commun "parivision_net", en mode bridge.
  parivision_net:
    driver: bridge